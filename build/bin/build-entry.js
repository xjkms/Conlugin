/**
 * Created by xjk-mac on 2017/11/14.
 * build entry files by node
 */

var Components = require('../../components.json');
var fs = require('fs');
var path = require('path');
var endOfLine = require('os').EOL;
var upperCase = require('uppercamelcase');
var render = require('json-templater/string')

var OUTPUT_PATH = path.join(__dirname, '../../components/index.js');

var IMPORT_TEMPLATE = 'import {{name}} from \'./{{packageName}}/index.js\'';
var MAIN_TEMPLATE = `/* Automatic generated by './build/bin/build-entry.js' */

{{imports}}

const components = [
  {{install}}
];

const install = function(Vue, opts = {}) {
  /* istanbul ignore if */
  if (install.installed) return;

  components.map(component => {
    Vue.component(component.name, component);
  });
  //
  // Vue.use(Loading.directive);
  //
  // Vue.prototype.$loading = Loading.service;
  // Vue.prototype.$msgbox = MessageBox;
  // Vue.prototype.$alert = MessageBox.alert;
  // Vue.prototype.$confirm = MessageBox.confirm;
  // Vue.prototype.$prompt = MessageBox.prompt;
  // Vue.prototype.$notify = Notification;
  // Vue.prototype.$message = Message;
};

/* istanbul ignore if */
if (typeof window !== 'undefined' && window.Vue) {
  install(window.Vue);
};

module.exports = {
  version: '{{version}}',
  install,
  {{list}}
};
`;

// 获取组件名列表
var ComponentNames = Object.keys(Components);

var importTemplate = [];
var ComponentsList = [];


// 遍历组件名生成对应模板
ComponentNames.forEach(name => {

  var ComponentName = upperCase(name);

  // 生成import部分模板
  importTemplate.push(render(IMPORT_TEMPLATE, {
    name: ComponentName,
    packageName: name
  }));
  ComponentsList.push(ComponentName);
});

var context = render(MAIN_TEMPLATE, {
  version: require('../../package.json').version,
  imports: importTemplate.join(endOfLine),
  install: ComponentsList.join(',' + endOfLine),
  list: ComponentsList.join(',' + endOfLine)
});

fs.writeFileSync(OUTPUT_PATH, context);

